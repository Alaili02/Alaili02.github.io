{"version":3,"sources":["store/scheduleSlice.js","store/themeSlice.js","store/store.js","features/PrimaryStyles.js","pages/Homepage.js","pages/Themepage.js","features/components/Schedule/Schedule.js","features/components/Schedule/DaySelector.js","features/components/Schedule/ScheduleAddItem.js","features/components/Schedule/ScheduleProperties.js","features/components/Schedule/ScheduleOperations.js","features/components/Schedule/ScheduleItems.js","pages/Schedulepage.js","features/components/ThemeButton.js","features/components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["scheduleSlice","createSlice","name","initialState","Object","objectSpread","items","id","color","content","type","day","timeStart","timeEnd","properties","interval","scale","dayStart","dayEnd","reducers","setScheduleProperties","state","action","_action$payload","payload","value","defineProperty","addScheduleItem","concat","toConsumableArray","removeScheduleItem","filter","item","selectItems","schedule","selectProperties","actions","permanentTheme","navHeight","darkModeTheme","fontColor","textShadowColor","mainAccentColor","backgroundColor","scheduleBackgroundColor","lightModeTheme","userTheme","themeSlice","user","toggleTheme","setDarkModeTheme","setLightModeTheme","setUserTheme","editCSS","selectThemeName","theme","selectThemeFontColor","selectThemeMainAccentColor","selectThemeBackgroundColor","rootReducer","combineReducers","ScheduleReducer","ThemeReducer","persistConfig","key","storage","middleware","thunk","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","GlobalStyle","createGlobalStyle","_templateObject","taggedTemplateLiteral","props","MainContentWrapper","styled","div","_templateObject2","Button","button","_templateObject3","GridHeader","h1","_templateObject4","h3","_templateObject5","GridLabel","label","_templateObject6","Homepage","react_default","a","createElement","style","margin","textAlign","StyledInput","input","Themepage_templateObject","ContentWrapper","Themepage_templateObject2","Wrapper","Themepage_templateObject3","validNames","connect","themeBackGroundColor","themeMainAccentColor","themeFontColor","dispatch","onEditCSS","obj","onSetUserTheme","_ref","HandleInputChange","e","_e$target","target","includes","isValid","onChange","ScheduleWrapper","Schedule_templateObject","rows","rowLength","Item","Schedule_templateObject2","col","colStart","colEnd","row","rowStart","rowEnd","DayItem","Schedule_templateObject3","AddedItem","Schedule_templateObject4","ItemText","p","Schedule_templateObject5","SeperatorItem","Schedule_templateObject6","index","mainAccent","ParseTime","rawTime","hours","Math","floor","minutes","HH","MM","GetDayFromLetter","letter","scheduleProperties","scheduleItems","singleInterval","dayLength","TimeIntervals","timeIntervals","i","rawStart","rawEnd","push","start","end","Fragment","map","contentItem","GetColFromDay","rowLineStart","rowLineEnd","title","CreateItem","Container","DaySelector_templateObject","DayButton","DaySelector_templateObject2","isSelected","active","DaySelector","setActive","selectedDay","setSelectedDay","ToggleActive","M","onClick","T","W","R","F","S","U","ScheduleAddItem_templateObject","StyledSelect","select","ScheduleAddItem_templateObject2","AddButton","ScheduleAddItem_templateObject3","ContentProperties","itemContents","setItemContents","inputName","inputValue","notMyItem","myItem","find","htmlFor","disabled","ScheduleAddItem_StyledInput","step","onAddScheduleItem","_ref2","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","daysToAdd","setDaysToAdd","_useState5","count","_useState6","itemProperties","setItemProperties","_useState7","_useState8","HandleSubItemPropertiesChange","_e$target2","parseFloat","Schedule_DaySelector","min","Array","keys","ScheduleAddItem_ContentProperties","parsedItemContents","dayStartTime","split","dayEndTime","parseInt","uuidv4","userInput","onSetScheduleProperties","ScheduleOperations_StyledInput","defaultValue","max","ScheduleOperations_templateObject","ScheduleOperationsWrapper","ScheduleOperations_templateObject2","ScheduleOperations","Schedule_ScheduleProperties","Schedule_ScheduleAddItem","ItemHeader","ScheduleItems_templateObject","RemoveButton","ScheduleItems_templateObject2","ItemInfoWrapper","ScheduleItems_templateObject3","ScheduleItemContainer","ScheduleItems_templateObject4","Circle","ScheduleItems_templateObject5","ItemInfo","subItem","ScheduleItem","onRemoveScheduleItem","ScheduleItems_ItemInfo","_ref3","ScheduleItems_ScheduleItem","Schedulepage_templateObject","SomeWrapper","Schedulepage_templateObject2","Schedulepage","Schedulepage_ContentWrapper","Schedule_ScheduleItems","Schedule_ScheduleOperations","components_Schedule_Schedule","themeName","onSetDarkTheme","onSetLightTheme","children","Nav","nav","Navbar_templateObject","StyledButton","Navbar_templateObject2","selectedPage","Navbar","useLocation","pathname","setSelectedPage","react_router_dom","to","components_ThemeButton","styled_components_browser_esm","components_Navbar","react_router","path","exact","element","pages_Homepage","pages_Themepage","pages_Schedulepage","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","es","integration_react","loading","src_App"],"mappings":"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","file":"static/js/main.633a05ab.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialScheduleState = {\r\n    items: [\r\n        {\r\n            id: '1',\r\n            name: 'Item 1',\r\n            color: '#22ee22',\r\n            content: [\r\n                {\r\n                    type: 'Lab',\r\n                    day: 'M',\r\n                    timeStart: '8.5',\r\n                    timeEnd: '10'\r\n                },\r\n                {\r\n                    type: 'Lecture',\r\n                    day: 'T',\r\n                    timeStart: '8.5',\r\n                    timeEnd: '10'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'Item 2',\r\n            color: '#eeee22',\r\n            content: [\r\n                {\r\n                    type: 'Tutorial',\r\n                    day: 'F',\r\n                    timeStart: '8.5',\r\n                    timeEnd: '10'\r\n                },\r\n                {\r\n                    type: 'Blended',\r\n                    day: 'U',\r\n                    timeStart: '13',\r\n                    timeEnd: '14'\r\n                },\r\n            ]\r\n        }\r\n    ],\r\n    properties: {\r\n        interval: 1,\r\n        scale: 6,\r\n        dayStart: 8,\r\n        dayEnd: 18,\r\n    }\r\n};\r\n\r\nexport const scheduleSlice = createSlice({\r\n    name: 'schedule',\r\n    initialState: {\r\n        ...initialScheduleState\r\n    },\r\n    reducers: {\r\n        setScheduleProperties: (state, action) => {\r\n            const {name, value} = action.payload;\r\n            return {\r\n                ...state,\r\n                properties: {\r\n                    ...state.properties,\r\n                    [name]: value\r\n                }\r\n            }\r\n        },\r\n        addScheduleItem: (state, action) => {\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    action.payload\r\n                ]\r\n            }\r\n        },\r\n        removeScheduleItem: (state, action) => {\r\n            const items = state.items.filter((item) => action.payload !== item.id)\r\n            return {\r\n                ...state,\r\n                items\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const selectItems = (state) => state.schedule.items;\r\nexport const selectProperties = (state) => state.schedule.properties;\r\nexport const { setScheduleProperties, addScheduleItem, removeScheduleItem } = scheduleSlice.actions;\r\nexport default scheduleSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst permanentTheme = {\r\n    navHeight: '6vh',\r\n}\r\nexport const darkModeTheme = {\r\n    name: 'DARK_MODE',\r\n    fontColor: \"#DDDDDD\",\r\n    textShadowColor: \"#DDDDDD\",\r\n    mainAccentColor: \"#5555FF\",\r\n    backgroundColor: \"#222222\",\r\n    scheduleBackgroundColor: '#222222',\r\n}\r\nexport const lightModeTheme = {\r\n    name: 'LIGHT_MODE',\r\n    fontColor: \"#222222\",\r\n    textShadowColor: \"#EEEEEE\",\r\n    mainAccentColor: \"#FF5555\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    scheduleBackgroundColor: '#DDDDDD',\r\n}\r\n\r\nexport const userTheme = {\r\n    name: 'USER',\r\n    fontColor: \"#DDDDDD\",\r\n    textShadowColor: \"#DDDDDD\",\r\n    mainAccentColor: \"#32AF8C\",\r\n    backgroundColor: \"#222222\",\r\n    scheduleBackgroundColor: '#222222',\r\n}\r\n\r\nexport const themeSlice = createSlice({\r\n    name: \"theme\",\r\n    initialState: {\r\n        ...permanentTheme,\r\n        ...darkModeTheme,\r\n        user: userTheme\r\n    },\r\n    reducers: {\r\n        toggleTheme: (state) => {\r\n            return (state.name === 'DARK_MODE')? \r\n            { ...permanentTheme, ...lightModeTheme }:\r\n            { ...permanentTheme, ...darkModeTheme };\r\n        },\r\n        setDarkModeTheme: (state) => {\r\n            return {...permanentTheme, ...darkModeTheme, user: {...userTheme, ...state.user}}\r\n        },\r\n        setLightModeTheme: (state) => {\r\n            return {...permanentTheme, ...lightModeTheme, user: {...userTheme, ...state.user}}\r\n        },\r\n        setUserTheme: (state) => {\r\n            return {...permanentTheme, ...state.user, user: {...userTheme, ...state.user}}\r\n        },\r\n        editCSS: (state, action) => {\r\n            const { name, value } = action.payload;\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    [name]: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\nexport const selectThemeName = (state) => state.theme.name;\r\nexport const selectThemeFontColor = (state) => state.theme.fontColor;\r\nexport const selectThemeTextShadowColor = (state) => state.theme.textShadowColor;\r\nexport const selectThemeMainAccentColor = (state) => state.theme.mainAccentColor;\r\nexport const selectThemeBackgroundColor = (state) => state.theme.backgroundColor;\r\nexport const selectUserTheme = (state) => state.user;\r\nexport const { toggleTheme, editCSS, setUserTheme, setDarkModeTheme, setLightModeTheme } = themeSlice.actions;\r\nexport default themeSlice.reducer;","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n;\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport ScheduleReducer from './scheduleSlice.js';\r\nimport ThemeReducer from './themeSlice.js';\r\n\r\nconst rootReducer = combineReducers({ \r\n    schedule: ScheduleReducer, \r\n    theme: ThemeReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n    middleware: [thunk]\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n        reducer: persistedReducer,\r\n        devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport const persistor = persistStore(store)","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n        background-color: ${props => props.theme.backgroundColor};\r\n        color: ${props => props.theme.fontColor};\r\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n        transition: all 0.2s ease;\r\n    }\r\n`;\r\n\r\nexport const MainContentWrapper = styled.div`\r\n    margin-top: ${props => props.theme.navHeight};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    box-sizing: content-box;\r\n    height: 3vh;\r\n    font-size: 1em;\r\n    margin: 0 1rem;\r\n    padding: 0 1em;\r\n    border-radius: 3px;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    /* Color the border and text with theme.main */\r\n    background-color: ${props => props.theme.backgroundColor};\r\n    color: ${props => props.theme.mainAccentColor};\r\n    border: 2px solid ${props => props.theme.mainAccentColor};\r\n\r\n    transition: border-color 0.2s ease;\r\n    transition: background-color 0.2s ease;\r\n    :hover {\r\n        color: ${props => props.theme.fontColor};\r\n        border: 2px solid ${props => props.theme.fontColor};\r\n    }\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    color: blue;\r\n`;\r\n\r\nexport const GridHeader = styled.h3`\r\n    grid-column: label-start / input-end;\r\n    text-align: center;\r\n    margin: 0;\r\n    margin-bottom: 0.5rem;\r\n    padding: 0.25rem 0;\r\n    border-bottom: solid 2px ${props => props.theme.mainAccentColor};\r\n`;\r\n\r\nexport const GridLabel = styled.label`\r\n    font-weight: bolder;\r\n    grid-column: label-start / label-end;\r\n    grid-row: span 1;\r\n`;","import React from 'react';\r\nimport { MainContentWrapper } from '../features/PrimaryStyles.js';\r\n\r\nconst Homepage = () => (\r\n    <MainContentWrapper>\r\n        <h1 style={{margin:\"10vh 0\", textAlign: \"center\"}}>Nothing here for now</h1>\r\n    </MainContentWrapper>\r\n);\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styled from 'styled-components';\r\nimport { MainContentWrapper, GridLabel as Label, GridHeader as Header } from '../features/PrimaryStyles.js';\r\nimport { editCSS, selectThemeBackgroundColor, selectThemeFontColor, selectThemeMainAccentColor, setUserTheme } from '../store/themeSlice'; \r\n\r\nexport const StyledInput = styled.input`\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    color: ${(props) => props.theme.fontColor};\r\n\r\n    justify-self: end;\r\n    margin-right: 10%;\r\n\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid ${props => props.theme.fontColor};\r\n\r\n    &[type='color']{\r\n        border-bottom: none;\r\n        padding: 0;\r\n    }\r\n    `;\r\n    \r\nconst ContentWrapper = styled(MainContentWrapper)`\r\n    > h1 {\r\n        padding: 10px;\r\n        margin: 0;\r\n        padding: 1vh 0;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n        margin: 10px auto;\r\n        padding: 10px;\r\n\r\n        width: fit-content;\r\n\r\n        -webkit-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n        -moz-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n        box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n\r\n        display: grid;\r\n        grid-template-columns: [label-start] 20ch [label-end input-start] 12ch [input-end];\r\n`\r\nconst validNames = [\"backgroundColor\", \"fontColor\", \"mainAccentColor\"]\r\nconst isValid = (name, value) => {\r\n    return validNames.includes(name);\r\n} \r\n\r\n\r\n\r\n\r\nconst Themepage = ({onEditCSS, onSetUserTheme, themeBackGroundColor, themeMainAccentColor, themeFontColor}) => {\r\n    \r\n    const HandleInputChange = e => {\r\n        const {name, value} = e.target;\r\n        if (!isValid(name, value)) return;\r\n\r\n        onEditCSS({\r\n            name,\r\n            value: value\r\n        });\r\n        onSetUserTheme();\r\n    }\r\n\r\n    return (\r\n    <ContentWrapper>\r\n        <h1>Modify Theme</h1>\r\n        <Wrapper>\r\n            <Header>Work In Progress...</Header>\r\n            <Label>Background Color:</Label>\r\n            <StyledInput \r\n                    name='backgroundColor'\r\n                    type='color'\r\n                    value={themeBackGroundColor}\r\n                    onChange={HandleInputChange}>\r\n            </StyledInput>\r\n            <Label>Accent Color:</Label>\r\n            <StyledInput \r\n                    name='mainAccentColor'\r\n                    type='color'\r\n                    value={themeMainAccentColor}\r\n                    onChange={HandleInputChange}>\r\n            </StyledInput>\r\n            <Label>Font Color:</Label>\r\n            <StyledInput \r\n                    name='fontColor'\r\n                    type='color'\r\n                    value={themeFontColor}\r\n                    onChange={HandleInputChange}>\r\n            </StyledInput>\r\n        </Wrapper>\r\n    </ContentWrapper>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    themeBackGroundColor: selectThemeBackgroundColor(state),\r\n    themeMainAccentColor: selectThemeMainAccentColor(state),\r\n    themeFontColor: selectThemeFontColor(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onEditCSS: (obj) => dispatch(editCSS(obj)),\r\n    onSetUserTheme: () => dispatch(setUserTheme())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Themepage);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { selectItems, selectProperties } from '../../../store/scheduleSlice.js';\r\n\r\nconst ScheduleWrapper = styled.div`\r\n    background-color: ${props => props.theme.backgroundColor};\r\n    display: grid;\r\n    grid-template-columns: [time-intervals-start] max-content [time-intervals-end items-start] repeat(7, auto) [items-end];\r\n    grid-template-rows: \r\n        [header-start] max-content \r\n        [header-end items-start] \r\n        /* repeat(${props => props.rows}, auto) [items-end]; */\r\n        repeat(${props => props.rows}, ${props => props.scale*props.rowLength}vh) [items-end];\r\n\r\n    /* grid-gap: 3px; */\r\n    text-align: center;\r\n\r\n    grid-area: schedule;\r\n`;\r\n\r\nconst Item = styled.div`\r\n    font-size: 1rem;\r\n    padding: 0.25rem;\r\n    grid-column: ${props => props.col};\r\n    grid-column-start: ${props => props.colStart};\r\n    grid-column-end: ${props => props.colEnd};\r\n\r\n    grid-row: ${props => props.row};\r\n    grid-row-start: ${props => props.rowStart};\r\n    grid-row-end: ${props => props.rowEnd};\r\n    position: relative;\r\n`;\r\nconst DayItem = styled(Item)`\r\n    font-weight: bolder;\r\n    font-size: larger;\r\n`;\r\nconst AddedItem = styled(Item)`\r\n    z-index: 1;\r\n\r\n    /* background-color: ${props => props.theme.backgroundColor}; */\r\n    background-color: ${props => props.backgroundColor};\r\n\r\n    -webkit-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.5);\r\n    -moz-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.5);\r\n    box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.5);\r\n    border: solid 1px ${props => props.theme.backgroundColor};\r\n\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst ItemText = styled.p`\r\n    margin: 0;\r\n    padding: 0;\r\n    ${props => {\r\n        if (props.theme.name === 'DARK_MODE')\r\n            return 'text-shadow: 1px 1px 2px '+props.theme.textShadowColor+';';\r\n    }}\r\n`;\r\n\r\nconst SeperatorItem = styled(Item)`\r\n    z-index: 0;\r\n\r\n    border-top: ${props => (props.index === 1)? \"2px solid \"+props.theme.mainAccent:\"none\"};\r\n    border-bottom: 1px inset ${props => props.theme.mainAccent};\r\n`;\r\n\r\nexport const ParseTime = (rawTime) => {\r\n    const hours = Math.floor(rawTime);\r\n    const minutes = (hours !== rawTime)? (rawTime - hours)*60 : 0;\r\n\r\n    const HH = (hours < 10)? `0${hours}`: `${hours}`;\r\n    const MM = (minutes < 10)? `0${minutes}`: `${minutes}`;\r\n    const time = `${HH}:${MM}`;\r\n    return time;\r\n}\r\n\r\nexport const GetColFromDay = (day) => {\r\n    let col;\r\n    switch(day) {\r\n        case 'M':\r\n            col = '2 / 3';\r\n            break;\r\n        case 'T':\r\n            col = '3 / 4';\r\n            break;\r\n        case 'W':\r\n            col = '4 / 5';\r\n            break;\r\n        case 'R':\r\n            col = '5 / 6';\r\n            break;\r\n        case 'F':\r\n            col = '6 / 7';\r\n            break;\r\n        case 'S':\r\n            col = '7 / 8';\r\n            break;\r\n        case 'U':\r\n            col = '8 / 9';\r\n            break;\r\n        default:\r\n            col = '1 / 2';\r\n    }\r\n    return col;\r\n}\r\n\r\nexport const GetDayFromLetter = (letter) => {\r\n    switch(letter) {\r\n        case 'M':\r\n            return 'Monday';\r\n        case 'T':\r\n            return 'Tuesday';\r\n        case 'W':\r\n            return 'Wednesday';\r\n        case 'R':\r\n            return 'Thursday';\r\n        case 'F':\r\n            return 'Friday';\r\n        case 'S':\r\n            return 'Saturday';\r\n        case 'U':\r\n            return 'Sunday';\r\n        default:\r\n            return '-';\r\n    }\r\n}\r\n\r\nconst Schedule = ({scheduleProperties, scheduleItems}) => {\r\n    const {interval: singleInterval, scale, dayStart, dayEnd} = scheduleProperties;\r\n    let dayLength = (dayEnd - dayStart);\r\n    let rowLength = 15/60;\r\n\r\n    const TimeIntervals = () => {\r\n        const timeIntervals = [];\r\n        for(let i = 1; i <= dayLength/singleInterval; i++) {\r\n\r\n            const rawStart = dayStart + (i-1)*singleInterval;\r\n            const rawEnd = dayStart + i*singleInterval;\r\n\r\n            timeIntervals.push({\r\n                index: i,\r\n                start: ParseTime(rawStart),\r\n                end: ParseTime(rawEnd),\r\n                row: `${i + 1} / ${i + 2}`,\r\n                rowStart: `${(i-1)*(singleInterval/rowLength)+1+1}`,\r\n                rowEnd: `${i*(singleInterval/rowLength)+1+1}`\r\n            })\r\n        }\r\n        return timeIntervals;\r\n    }\r\n    const DaysHeader = () => {\r\n        return (\r\n            <> \r\n                <DayItem col='2 / 3' rowStart='header-start' rowEnd='header-end'>Monday</DayItem>\r\n                <DayItem col='3 / 4' rowStart='header-start' rowEnd='header-end'>Tuesday</DayItem>\r\n                <DayItem col='4 / 5' rowStart='header-start' rowEnd='header-end'>Wednesday</DayItem>\r\n                <DayItem col='5 / 6' rowStart='header-start' rowEnd='header-end'>Thursday</DayItem>\r\n                <DayItem col='6 / 7' rowStart='header-start' rowEnd='header-end'>Friday</DayItem>\r\n                <DayItem col='7 / 8' rowStart='header-start' rowEnd='header-end'>Saturday</DayItem>\r\n                <DayItem col='8 / 9' rowStart='header-start' rowEnd='header-end'>Sunday</DayItem>\r\n            </>\r\n        );\r\n    }\r\n    const CreateItem = item => {\r\n        const {name, id, content, color} = item;\r\n        return (\r\n            <React.Fragment key={name+id}>\r\n                {content.map(contentItem => {\r\n                    let col = GetColFromDay(contentItem.day);\r\n                    let rowLineStart = (contentItem.timeStart - dayStart)/rowLength + 1 + 1;\r\n                    let rowLineEnd = (contentItem.timeEnd - dayStart)/rowLength + 1 + 1;\r\n                    let row = `${rowLineStart} / ${rowLineEnd}`;\r\n                    \r\n                    return (\r\n                        <AddedItem\r\n                            title={`${ParseTime(contentItem.timeStart)} - ${ParseTime(contentItem.timeEnd)}`}\r\n                            col={col}\r\n                            rowStart={rowLineStart}\r\n                            rowEnd={rowLineEnd}\r\n                            backgroundColor={color}\r\n                            key={`${id} - ${row} - ${col}`}>\r\n                                <ItemText>{name}</ItemText>\r\n                                <ItemText>{contentItem.type}</ItemText>\r\n                        </AddedItem>\r\n                    );\r\n                })}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <ScheduleWrapper rows={dayLength/rowLength} rowLength={rowLength} scale={scale}>\r\n                {scheduleItems.map((item) => CreateItem(item))}\r\n\r\n                {DaysHeader()}\r\n                {TimeIntervals()\r\n                    .map(item => \r\n                    <SeperatorItem \r\n                        index={item.index}\r\n                        colStart='time-intervals-start'\r\n                        colEnd='time-intervals-end'\r\n                        rowStart={item.rowStart}\r\n                        rowEnd={item.rowEnd}\r\n                        key={item.row}>\r\n                        {`${item.start} - ${item.end}`}\r\n                    </SeperatorItem>)}\r\n\r\n                {TimeIntervals()\r\n                    .map(item => \r\n                    <SeperatorItem \r\n                        index={item.index}\r\n                        colStart='items-start'\r\n                        colEnd='items-end'\r\n                        rowStart={item.rowStart}\r\n                        rowEnd={item.rowEnd}\r\n                        key={item.row + 'sep'}>\r\n                    </SeperatorItem>)}\r\n        </ScheduleWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    scheduleProperties: selectProperties(state),\r\n    scheduleItems: selectItems(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../../PrimaryStyles.js'\r\n\r\nconst Container = styled.div`\r\n    margin: 2px 0;\r\n    grid-column: span 2;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-content: center;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst DayButton = styled(Button)`\r\n    flex: 1;\r\n    max-width: 2vw;\r\n    box-sizing: content-box;\r\n    height: 1.5rem;\r\n    padding: 0px;\r\n    margin: 1px;\r\n\r\n\r\n    ${props => {\r\n\r\n        if (props.isSelected(props.value))\r\n            return (\r\n                'background-color: ' + props.theme.mainAccentColor + ';'+\r\n                'border-color: ' + props.theme.fontColor + ';'+\r\n                'color: ' + props.theme.fontColor+';'\r\n                );\r\n        else if (props.active)\r\n            return (\r\n                'background-color: ' + props.theme.mainAccentColor + ';'+\r\n                'border-color: ' + props.theme.mainAccentColor + ';'+\r\n                'color: ' + props.theme.backgroundColor + ';'\r\n                );\r\n        else\r\n            return (\r\n                'background-color: ' + props.theme.backgroundColor + ';'+\r\n                'color: ' + props.theme.mainAccentColor + ';'\r\n            );\r\n    }}\r\n`;\r\n\r\nconst DaySelector = ({active, setActive, selectedDay, setSelectedDay}) => {\r\n    const ToggleActive = e => {\r\n        setSelectedDay(e.target.value);\r\n        setActive({\r\n            ...active,\r\n            [e.target.value]: true\r\n            // [e.target.value]: !active[e.target.value]\r\n        })\r\n    }\r\n\r\n    const isSelected = value => (selectedDay === value);\r\n\r\n    return (\r\n        <Container>\r\n            <DayButton value='M' active={active.M} onClick={ToggleActive} isSelected={isSelected}>M</DayButton>\r\n            <DayButton value='T' active={active.T} onClick={ToggleActive} isSelected={isSelected}>T</DayButton>\r\n            <DayButton value='W' active={active.W} onClick={ToggleActive} isSelected={isSelected}>W</DayButton>\r\n            <DayButton value='R' active={active.R} onClick={ToggleActive} isSelected={isSelected}>R</DayButton>\r\n            <DayButton value='F' active={active.F} onClick={ToggleActive} isSelected={isSelected}>F</DayButton>\r\n            <DayButton value='S' active={active.S} onClick={ToggleActive} isSelected={isSelected}>S</DayButton>\r\n            <DayButton value='U' active={active.U} onClick={ToggleActive} isSelected={isSelected}>U</DayButton>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DaySelector;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { addScheduleItem } from '../../../store/scheduleSlice.js';\r\nimport { Button, GridHeader as Header, GridLabel as Label } from '../../PrimaryStyles.js'\r\nimport { GetDayFromLetter } from './Schedule.js';\r\nimport DaySelector from './DaySelector.js';\r\n\r\nconst StyledInput = styled.input`\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    color: ${(props) => props.theme.fontColor};\r\n    grid-column: input-start / input-end;\r\n\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid ${props => props.theme.fontColor};\r\n\r\n    &[type='color']{\r\n        padding: 0;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst StyledSelect = styled.select`\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    color: ${(props) => props.theme.fontColor};\r\n    grid-column: input-start / input-end;\r\n\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid ${props => props.theme.fontColor};\r\n`;\r\n\r\nconst AddButton = styled(Button)`\r\n    margin-top: 2%;\r\n    grid-column: label-start / input-end;\r\n`;\r\n\r\nconst ContentProperties = ({itemContents, setItemContents, index, day}) => {\r\n    const HandleInputChange = e => {\r\n        const {name: inputName, value: inputValue} = e.target;\r\n        setItemContents(() => {\r\n            const notMyItem = itemContents.filter(item => item !== myItem);\r\n            return(\r\n                [\r\n                    ...notMyItem,\r\n                    {\r\n                        day: day,\r\n                        index: index,\r\n                        ...myItem,\r\n                        [inputName]: inputValue\r\n                    }\r\n                ]\r\n            );\r\n        })\r\n    };\r\n    const myItem = itemContents.find(item => item.day === day && item.index === index) ||\r\n        {\r\n            day: day,\r\n            index: index,\r\n            type: 'Select',\r\n            timeStart: '',\r\n            timeEnd: ''\r\n        };\r\n    return (\r\n        <>\r\n            <Label htmlFor='typeSelect'>Type: </Label>\r\n            <StyledSelect \r\n                name='type' \r\n                id='typeSelect' \r\n                onChange={HandleInputChange} \r\n                value={myItem.type || 'Select'}>\r\n                    <option value='Select' disabled>Select</option>\r\n                    <option value='Lecture'>Lecture</option>\r\n                    <option value='Lab'>Lab</option>\r\n                    <option value='Tutorial'>Tutorial</option>\r\n                    <option value='Blended'>Blended</option>\r\n            </StyledSelect>\r\n\r\n            <Label htmlFor='newDayStartInput'>Starts at:</Label>\r\n            <StyledInput \r\n                name='timeStart' \r\n                id='newDayStartInput'\r\n                type='time'\r\n                step='900'\r\n                value={myItem.timeStart || ''}\r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n\r\n            <Label htmlFor='newDayEndInput'>Ends at:</Label>\r\n            <StyledInput \r\n                name='timeEnd' \r\n                id='newDayEndInput'\r\n                type='time'\r\n                step='900'\r\n                value={myItem.timeEnd || ''}\r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ScheduleAddItem = ({onAddScheduleItem}) => {\r\n    const [selectedDay, setSelectedDay] = useState('');\r\n    const [daysToAdd, setDaysToAdd] = useState({\r\n        M: false,\r\n        T: false,\r\n        W: false,\r\n        R: false,\r\n        F: false,\r\n        S: false,\r\n        U: false,\r\n    });\r\n   \r\n    const [itemProperties, setItemProperties] = useState({\r\n        name: '',\r\n        color: '#000000',\r\n        count: {\r\n            M: 0,\r\n            T: 0,\r\n            W: 0,\r\n            R: 0,\r\n            F: 0,\r\n            S: 0,\r\n            U: 0\r\n        }\r\n    });\r\n    const [itemContents, setItemContents] = useState([]);\r\n\r\n    const HandleSubItemPropertiesChange = e => {\r\n        const {name: inputName, value: inputValue} = e.target;\r\n        if (inputName==='count')\r\n            setItemProperties({\r\n                ...itemProperties,\r\n                count: {\r\n                    ...itemProperties.count,\r\n                    [selectedDay]: parseFloat(inputValue)\r\n                }\r\n            })\r\n        else\r\n            setItemProperties({\r\n                ...itemProperties,\r\n                [inputName]: inputValue\r\n            })\r\n    }\r\n\r\n    const onClickAddScheduleItem = () => {\r\n        // const dayStartTime = stagedItem.newDayStart.split(':');\r\n        // if (!isValidTime(dayStartTime[0], dayStartTime[1])) return; //add invalid input message\r\n\r\n        // const dayEndTime = stagedItem.newDayEnd.split(':');\r\n        // if (!isValidTime(dayEndTime[0], dayEndTime[1])) return; //add invalid input message\r\n\r\n        const parsedItemContents = itemContents.map(item => {\r\n            let dayStartTime = item.timeStart.split(':');    \r\n            let dayEndTime = item.timeEnd.split(':');\r\n    \r\n            return ({\r\n                day: item.day,\r\n                type: item.type,\r\n                timeStart: `${parseInt(dayStartTime[0]) + dayStartTime[1]/60}`,\r\n                timeEnd: `${parseInt(dayEndTime[0]) + dayEndTime[1]/60}`\r\n            });\r\n        });\r\n\r\n        onAddScheduleItem({\r\n            id: uuidv4(),\r\n            name: itemProperties.name,\r\n            color: itemProperties.color,\r\n            content: parsedItemContents\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header>New Item</Header>\r\n            <Label htmlFor='nameInput'>Name: </Label>\r\n            <StyledInput\r\n                type='text'\r\n                name='name'\r\n                id='nameInput'\r\n                value={itemProperties.name || ''}\r\n                onChange={HandleSubItemPropertiesChange}>\r\n            </StyledInput>\r\n\r\n            <Label htmlFor='newColorInput'>Color: </Label>\r\n            <StyledInput\r\n                type='color'\r\n                name='color'\r\n                id='newColorInput'\r\n                value={itemProperties.color || '#000000'}\r\n                onChange={HandleSubItemPropertiesChange}>\r\n            </StyledInput>\r\n\r\n            <DaySelector \r\n                active={daysToAdd} \r\n                setActive={setDaysToAdd} \r\n                selectedDay={selectedDay} \r\n                setSelectedDay={setSelectedDay}/>\r\n\r\n            <Label htmlFor='SelectedDayView'>Selected Day: </Label>\r\n            <StyledInput\r\n                id='SelectedDayView'\r\n                type='text'\r\n                value={GetDayFromLetter(selectedDay) || ''}\r\n                disabled/>\r\n\r\n            <Label htmlFor='countInput'>Content Count:</Label>\r\n            <StyledInput\r\n                name='count'\r\n                id='countInput'\r\n                type='number'\r\n                min='0'\r\n                value={itemProperties.count[selectedDay] || 0}\r\n                onChange={HandleSubItemPropertiesChange}/>\r\n\r\n            {/* {(selectedItem.count)? Array(selectedItem.count).fill(<ContentProperties key={'te'}/>):null} */}\r\n            {(itemProperties.count[selectedDay])? \r\n                [...Array(itemProperties.count[selectedDay]).keys()].map(key => \r\n                    <ContentProperties \r\n                    key={key+'TypeTimeInput'} \r\n                    day={selectedDay}\r\n                    index={key}\r\n                    itemContents={itemContents}\r\n                    setItemContents={setItemContents}/>)\r\n                :null\r\n            }\r\n            {/* {(selectedItem.count)? Array.from({length: selectedItem.count}, (v, i) => <ContentProperties key={i+'TypeTimeInput'}/>):null} */}\r\n            \r\n            <AddButton onClick={onClickAddScheduleItem}>Add to Schedule</AddButton>\r\n        </>\r\n    );\r\n}\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddScheduleItem: item => dispatch(addScheduleItem(item)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleAddItem);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setScheduleProperties, addScheduleItem, selectProperties } from '../../../store/scheduleSlice.js';\r\n\r\nimport { GridHeader as Header, GridLabel as Label } from '../../PrimaryStyles.js'\r\nimport { StyledInput } from './ScheduleOperations.js';\r\n\r\nconst ScheduleProperties =  ({userInput, onSetScheduleProperties, onAddScheduleItem}) => {\r\n    const HandleInputChange = e => {\r\n        const {name, value} = e.target;\r\n        if (name==='interval' && value <= 0) {\r\n            return;\r\n        }\r\n        onSetScheduleProperties({\r\n            name,\r\n            value: parseFloat(value)\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Header>Properties</Header>\r\n            <Label htmlFor='singleIntervalInput'>Time Interval</Label>\r\n            <StyledInput \r\n                name='interval'\r\n                type='number'\r\n                id='singleIntervalInput' \r\n                defaultValue={userInput.interval} \r\n                step='0.25' \r\n                min='0.25' \r\n                max='3' \r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n\r\n            <Label htmlFor='scaleInput'>Scale</Label>\r\n            <StyledInput \r\n                name='scale' \r\n                type='number'\r\n                id='scaleInput'\r\n                defaultValue={userInput.scale} \r\n                step='0.1' \r\n                min='1' \r\n                max='10' \r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n\r\n            <Label htmlFor='dayStartInput'>Start day at: </Label>\r\n            <StyledInput \r\n                name='dayStart' \r\n                type='number'\r\n                id='dayStartInput'\r\n                defaultValue={userInput.dayStart}\r\n                step='0.5' \r\n                min='0' \r\n                max='24' \r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n\r\n            <Label htmlFor='dayEndInput'>End day at: </Label>\r\n            <StyledInput \r\n                name='dayEnd' \r\n                type='number'\r\n                id='dayEndInput'\r\n                defaultValue={userInput.dayEnd} \r\n                step='0.5' \r\n                min='0' \r\n                max='24' \r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userInput: selectProperties(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSetScheduleProperties: (obj) => dispatch(setScheduleProperties(obj)),\r\n    onAddScheduleItem: (item) => dispatch(addScheduleItem(item))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleProperties);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ScheduleAddItem from './ScheduleAddItem.js';\r\nimport ScheduleProperties from './ScheduleProperties.js';\r\n\r\nexport const StyledInput = styled.input`\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    color: ${(props) => props.theme.fontColor};\r\n    grid-column: input-start / input-end;\r\n\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid ${props => props.theme.fontColor};\r\n\r\n    &[type='color']{\r\n        padding: 0;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst ScheduleOperationsWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: [label-start] auto [label-end input-start] 12ch [input-end];\r\n    align-items: center;\r\n`;\r\n\r\nconst ScheduleOperations = () => {\r\n    return(\r\n        <>\r\n        <ScheduleOperationsWrapper>\r\n                <ScheduleProperties />\r\n        </ScheduleOperationsWrapper>\r\n        <ScheduleOperationsWrapper>\r\n                <ScheduleAddItem />\r\n        </ScheduleOperationsWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ScheduleOperations;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeScheduleItem, selectItems } from '../../../store/scheduleSlice.js';\r\nimport styled from 'styled-components';\r\nimport { ParseTime } from './Schedule.js';\r\nimport { GridHeader as Header, Button } from '../../PrimaryStyles.js'\r\n\r\nconst ItemHeader = styled.div`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: 0.5rem 0;\r\n    > p {\r\n        margin: 0 auto 0 10px;\r\n        font-weight: bolder;\r\n    }\r\n`;\r\n\r\nconst RemoveButton = styled(Button)`\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 2rem;\r\n    width: 2rem;\r\n`;\r\n\r\nconst ItemInfoWrapper = styled.div`\r\n    background-color: ${props => props.color};\r\n    display: grid;\r\n    grid-template-columns: repeat(3, auto);\r\n\r\n    > p {\r\n        margin: 0;\r\n        padding: 0;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\n\r\nconst ScheduleItemContainer = styled.div`\r\n    margin: 0.5rem 0;\r\n`;\r\nconst Circle = styled.div`\r\n    height: 1.4rem;\r\n    width: 1.4rem;\r\n    border-radius: 50%;\r\n    background-color: ${props => props.color};\r\n`;\r\n\r\nconst ItemInfo = ({ content }) => (\r\n    <ItemInfoWrapper>\r\n        {content.map(subItem => (\r\n            <React.Fragment key={'subItem'+subItem.day+subItem.type+subItem.timeStart+subItem.timeEnd}>\r\n                <p>{subItem.day}</p>\r\n                <p>{subItem.type}</p>\r\n                <p>{ParseTime(subItem.timeStart)} - {ParseTime(subItem.timeEnd)}</p>\r\n            </React.Fragment>\r\n        ))}\r\n    </ItemInfoWrapper>\r\n)\r\nconst ScheduleItem = ({id, name, color, content, onRemoveScheduleItem}) => (\r\n    <ScheduleItemContainer>\r\n        <ItemHeader>\r\n            <Circle color={color}/>\r\n            <p>{name}</p>\r\n            <RemoveButton onClick={() => onRemoveScheduleItem(id)}>X</RemoveButton>\r\n        </ItemHeader>\r\n        <ItemInfo content={content}/>\r\n    </ScheduleItemContainer>\r\n);\r\nconst ScheduleItems = ({scheduleItems, onRemoveScheduleItem}) => {\r\n    return(\r\n        <div>\r\n            <Header>Content</Header>\r\n            {scheduleItems.map(\r\n                (item) => \r\n                <ScheduleItem \r\n                    id={item.id}\r\n                    name={item.name}\r\n                    color={item.color} \r\n                    content={item.content}\r\n                    key={'Items - '+item.id}\r\n                    onRemoveScheduleItem={onRemoveScheduleItem}/>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    scheduleItems: selectItems(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onRemoveScheduleItem: (id) => dispatch(removeScheduleItem(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleItems);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { MainContentWrapper } from '../features/PrimaryStyles.js';\r\nimport Schedule from '../features/components/Schedule/Schedule.js';\r\nimport ScheduleOperations from '../features/components/Schedule/ScheduleOperations.js';\r\nimport ScheduleItems from '../features/components/Schedule/ScheduleItems.js';\r\n\r\nconst ContentWrapper = styled(MainContentWrapper)`\r\n    > h1 {\r\n        padding: 10px;\r\n        margin: 0;\r\n        padding: 1vh 0;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst SomeWrapper = styled.div`\r\n    display: grid;\r\n    /* grid-template-columns: max-content max-content auto; */\r\n    grid-template-columns: 20% 1fr;\r\n    grid-template-areas: \"items schedule\" \"itemsAdd schedule\" \"operations schedule\" \"_ schedule\";\r\n    grid-auto-rows: min-content;\r\n    align-items: flex-start;\r\n\r\n    > * {\r\n        margin: 10px;\r\n        padding: 10px;\r\n\r\n        -webkit-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n        -moz-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n        box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n    }\r\n`;\r\n\r\nconst Schedulepage = () => (\r\n    <ContentWrapper>\r\n        <h1>Schedule Builder</h1>\r\n        <SomeWrapper>\r\n            <ScheduleItems />\r\n            <ScheduleOperations />\r\n            {/* <ScheduleItems /> */}\r\n            {/* <ScheduleAddItem /> */}\r\n            <Schedule />\r\n        </SomeWrapper>\r\n    </ContentWrapper>\r\n);\r\n\r\nexport default Schedulepage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '../PrimaryStyles.js';\r\nimport { setUserTheme, setDarkModeTheme, setLightModeTheme, selectThemeName, darkModeTheme, lightModeTheme, userTheme } from '../../store/themeSlice.js';\r\n\r\nconst ThemeButton = ( {themeName, onSetUserTheme, onSetDarkTheme, onSetLightTheme, children} ) => {\r\n\r\n    const changeTheme = () => {\r\n        if (themeName === darkModeTheme.name) {\r\n            onSetLightTheme();\r\n        } else if (themeName === lightModeTheme.name) {\r\n            onSetUserTheme();\r\n        } else if (themeName === userTheme.name) {\r\n            onSetDarkTheme();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Button onClick = {changeTheme}>{children}</Button>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    themeName: selectThemeName(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSetUserTheme: () => dispatch(setUserTheme()),\r\n    onSetDarkTheme: () => dispatch(setDarkModeTheme()),\r\n    onSetLightTheme: () => dispatch(setLightModeTheme())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeButton);","import React, {useState} from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { selectThemeFontColor, selectThemeMainAccentColor } from '../../store/themeSlice.js';\r\nimport { Button } from '../PrimaryStyles.js';\r\nimport ThemeButton from './ThemeButton.js'\r\n\r\nconst Nav = styled.nav`\r\n    z-index: 10;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n\r\n    position: fixed;\r\n    height: ${props => props.theme.navHeight};\r\n    top: 0;\r\n    width: 100%;\r\n    border-top: 3px solid ${props => props.theme.mainAccentColor};\r\n    background-color: ${props => props.theme.backgroundColor};\r\n\r\n    -webkit-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n    box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n\r\n    > :first-child {\r\n        margin-left: 1rem;\r\n    }\r\n\r\n    > :last-child {\r\n        margin-left: auto;\r\n    }\r\n\r\n    > a {\r\n        margin: 0 0.5rem;\r\n        height: 60%;\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        justify-content: center;\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    height: 100%;\r\n    min-width: fit-content;\r\n    box-sizing: border-box;\r\n    margin: 0 0;\r\n    ${props => {\r\n        if (props.value === props.selectedPage) {\r\n            return (\r\n                'border-color: ' + selectThemeFontColor(props) + ';'+\r\n                'color: ' + selectThemeFontColor(props) + ';'+\r\n                'background-color:' + selectThemeMainAccentColor(props) + ';'\r\n                );\r\n        }\r\n    }}\r\n`;\r\n\r\nconst Navbar = () => {\r\n    const [selectedPage, setSelectedPage] = useState(useLocation().pathname);\r\n    const setActive = e => {\r\n        setSelectedPage(e.target.value);\r\n    }\r\n    return (\r\n    <Nav>\r\n        <Link to='/'>\r\n            <StyledButton onClick={setActive} value='/' selectedPage={selectedPage}>Resume</StyledButton>\r\n        </Link>\r\n        <Link to='/theme'>\r\n            <StyledButton onClick={setActive} value='/theme' selectedPage={selectedPage}>Modify Theme</StyledButton>\r\n        </Link>\r\n        <Link to='/schedule_builder'>\r\n            <StyledButton onClick={setActive} value='/schedule_builder' selectedPage={selectedPage}>Schedule Builder</StyledButton>\r\n        </Link>\r\n        <ThemeButton>Change Theme</ThemeButton>\r\n    </Nav>\r\n);}\r\n\r\nexport default Navbar;","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BrowserRouter,\n  Routes,\n  Route \n} from 'react-router-dom';\n\nimport Homepage from './pages/Homepage';\nimport Themepage from './pages/Themepage';\nimport Schedulepage from './pages/Schedulepage';\n\nimport Navbar from './features/components/Navbar'\n\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyle } from './features/PrimaryStyles.js'\n\nconst App = ({theme}) => (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <GlobalStyle />\n        <Navbar />\n        <Routes>\n            <Route path = '/' exact element={< Homepage />} />\n            <Route path = '/theme' exact element={< Themepage />} />\n            <Route path = '/schedule_builder' exact element={< Schedulepage />} />\n        </Routes>\n      </BrowserRouter>\n    </ThemeProvider>\n);\n\nconst mapStateToProps = state => ({\n  theme: state.theme,\n});\nconst dispatchStateToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, dispatchStateToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store/store.js';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}