{"version":3,"sources":["store/scheduleSlice.js","store/themeSlice.js","store/store.js","features/PrimaryStyles.js","pages/Homepage.js","pages/Themepage.js","features/components/Schedule/Schedule.js","features/components/Schedule/DaySelector.js","features/components/Schedule/ScheduleAddItem.js","features/components/Schedule/ScheduleProperties.js","features/components/Schedule/ScheduleOperations.js","features/components/Schedule/ScheduleItems.js","pages/Schedulepage.js","features/components/ThemeButton.js","features/components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["scheduleSlice","createSlice","name","initialState","Object","objectSpread","items","id","color","content","type","day","timeStart","timeEnd","properties","interval","scale","dayStart","dayEnd","reducers","setScheduleProperties","state","action","_action$payload","payload","value","defineProperty","addScheduleItem","concat","toConsumableArray","removeScheduleItem","filter","item","selectItems","schedule","selectProperties","actions","permanentTheme","navHeight","darkModeTheme","fontColor","textShadowColor","mainAccent","backgroundColor","scheduleBackgroundColor","lightModeTheme","themeSlice","toggleTheme","editCSS","selectThemeFontColor","theme","rootReducer","combineReducers","ScheduleReducer","ThemeReducer","persistConfig","key","storage","middleware","thunk","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","GlobalStyle","createGlobalStyle","_templateObject","taggedTemplateLiteral","props","MainContentWrapper","styled","div","_templateObject2","Button","button","_templateObject3","GridHeader","h1","_templateObject4","h3","_templateObject5","GridLabel","label","_templateObject6","Homepage","react_default","a","createElement","style","margin","textAlign","StyledInput","input","Themepage_templateObject","connect","dispatch","onEditCSS","obj","_ref","defaultValue","step","min","max","onChange","e","_e$target","target","ScheduleWrapper","Schedule_templateObject","rows","rowLength","Item","Schedule_templateObject2","col","colStart","colEnd","row","rowStart","rowEnd","DayItem","Schedule_templateObject3","AddedItem","Schedule_templateObject4","ItemText","p","Schedule_templateObject5","SeperatorItem","Schedule_templateObject6","index","ParseTime","rawTime","hours","Math","floor","minutes","HH","MM","GetDayFromLetter","letter","scheduleProperties","scheduleItems","singleInterval","dayLength","TimeIntervals","timeIntervals","i","rawStart","rawEnd","push","start","end","Fragment","map","contentItem","GetColFromDay","rowLineStart","rowLineEnd","title","CreateItem","Container","DaySelector_templateObject","DayButton","DaySelector_templateObject2","isSelected","active","DaySelector","setActive","selectedDay","setSelectedDay","ToggleActive","M","onClick","T","W","R","F","S","U","ScheduleAddItem_templateObject","StyledSelect","select","ScheduleAddItem_templateObject2","AddButton","ScheduleAddItem_templateObject3","ContentProperties","itemContents","setItemContents","HandleInputChange","inputName","inputValue","notMyItem","myItem","find","htmlFor","disabled","ScheduleAddItem_StyledInput","onAddScheduleItem","_ref2","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","daysToAdd","setDaysToAdd","_useState5","count","_useState6","itemProperties","setItemProperties","_useState7","_useState8","HandleSubItemPropertiesChange","_e$target2","parseFloat","Schedule_DaySelector","Array","keys","ScheduleAddItem_ContentProperties","parsedItemContents","dayStartTime","split","dayEndTime","parseInt","uuidv4","userInput","onSetScheduleProperties","ScheduleOperations_StyledInput","ScheduleOperations_templateObject","ScheduleOperationsWrapper","ScheduleOperations_templateObject2","ScheduleOperations","Schedule_ScheduleProperties","Schedule_ScheduleAddItem","ItemHeader","ScheduleItems_templateObject","RemoveButton","ScheduleItems_templateObject2","ItemInfoWrapper","ScheduleItems_templateObject3","ScheduleItemContainer","ScheduleItems_templateObject4","Circle","ScheduleItems_templateObject5","ItemInfo","subItem","ScheduleItem","onRemoveScheduleItem","ScheduleItems_ItemInfo","_ref3","ScheduleItems_ScheduleItem","ContentWrapper","Schedulepage_templateObject","SomeWrapper","Schedulepage_templateObject2","Schedulepage","Schedule_ScheduleItems","Schedule_ScheduleOperations","components_Schedule_Schedule","onToggleThemePressed","children","Nav","nav","Navbar_templateObject","StyledButton","Navbar_templateObject2","selectedPage","Navbar","useLocation","pathname","setSelectedPage","react_router_dom","to","components_ThemeButton","styled_components_browser_esm","components_Navbar","react_router","path","exact","element","pages_Homepage","pages_Themepage","pages_Schedulepage","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","es","integration_react","loading","src_App"],"mappings":"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","file":"static/js/main.f7e8e384.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialScheduleState = {\r\n    items: [\r\n        {\r\n            id: '1',\r\n            name: 'Item 1',\r\n            color: '#22ee22',\r\n            content: [\r\n                {\r\n                    type: 'Lab',\r\n                    day: 'M',\r\n                    timeStart: '8.5',\r\n                    timeEnd: '10'\r\n                },\r\n                {\r\n                    type: 'Lecture',\r\n                    day: 'T',\r\n                    timeStart: '8.5',\r\n                    timeEnd: '10'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'Item 2',\r\n            color: '#eeee22',\r\n            content: [\r\n                {\r\n                    type: 'Tutorial',\r\n                    day: 'F',\r\n                    timeStart: '8.5',\r\n                    timeEnd: '10'\r\n                },\r\n                {\r\n                    type: 'Blended',\r\n                    day: 'U',\r\n                    timeStart: '13',\r\n                    timeEnd: '14'\r\n                },\r\n            ]\r\n        }\r\n    ],\r\n    properties: {\r\n        interval: 1,\r\n        scale: 6,\r\n        dayStart: 8,\r\n        dayEnd: 18,\r\n    }\r\n};\r\n\r\nexport const scheduleSlice = createSlice({\r\n    name: 'schedule',\r\n    initialState: {\r\n        ...initialScheduleState\r\n    },\r\n    reducers: {\r\n        setScheduleProperties: (state, action) => {\r\n            const {name, value} = action.payload;\r\n            return {\r\n                ...state,\r\n                properties: {\r\n                    ...state.properties,\r\n                    [name]: value\r\n                }\r\n            }\r\n        },\r\n        addScheduleItem: (state, action) => {\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    action.payload\r\n                ]\r\n            }\r\n        },\r\n        removeScheduleItem: (state, action) => {\r\n            const items = state.items.filter((item) => action.payload !== item.id)\r\n            return {\r\n                ...state,\r\n                items\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const selectItems = (state) => state.schedule.items;\r\nexport const selectProperties = (state) => state.schedule.properties;\r\nexport const { setScheduleProperties, addScheduleItem, removeScheduleItem } = scheduleSlice.actions;\r\nexport default scheduleSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst permanentTheme = {\r\n    navHeight: '6vh',\r\n}\r\nconst darkModeTheme = {\r\n    name: 'DARK_MODE',\r\n    fontColor: \"#DDDDDD\",\r\n    textShadowColor: \"#111111\",\r\n    mainAccent: \"#5555FF\",\r\n    backgroundColor: \"#222222\",\r\n    scheduleBackgroundColor: '#222222',\r\n}\r\nconst lightModeTheme = {\r\n    name: 'LIGHT_MODE',\r\n    fontColor: \"#222222\",\r\n    textShadowColor: \"#EEEEEE\",\r\n    mainAccent: \"#FF5555\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    scheduleBackgroundColor: '#DDDDDD',\r\n}\r\n\r\nexport const themeSlice = createSlice({\r\n    name: \"theme\",\r\n    initialState: {\r\n        ...permanentTheme,\r\n        ...darkModeTheme\r\n    },\r\n    reducers: {\r\n        toggleTheme: (state) => {\r\n            return (state.name === 'DARK_MODE')? \r\n            { ...permanentTheme, ...lightModeTheme }:\r\n            { ...permanentTheme, ...darkModeTheme };\r\n        },\r\n        editCSS: (state, action) => {\r\n            const { name, value } = action.payload;\r\n            return {\r\n                ...state,\r\n                [name]: value\r\n            }\r\n        }\r\n    }\r\n})\r\nexport const selectThemeName = (state) => state.theme.name;\r\nexport const selectThemeFontColor = (state) => state.theme.fontColor;\r\nexport const selectThemeTextShadowColor = (state) => state.theme.textShadowColor;\r\nexport const selectThemeMainAccent = (state) => state.theme.mainAccent;\r\nexport const selectThemeBackgroundColor = (state) => state.theme.backgroundColor;\r\nexport const { toggleTheme, editCSS } = themeSlice.actions;\r\nexport default themeSlice.reducer;","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n;\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport ScheduleReducer from './scheduleSlice.js';\r\nimport ThemeReducer from './themeSlice.js';\r\n\r\nconst rootReducer = combineReducers({ \r\n    schedule: ScheduleReducer, \r\n    theme: ThemeReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n    middleware: [thunk]\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n        reducer: persistedReducer,\r\n        devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport const persistor = persistStore(store)","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n        background-color: ${props => props.theme.backgroundColor};\r\n        color: ${props => props.theme.fontColor};\r\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n        transition: all 0.2s ease;\r\n    }\r\n`;\r\n\r\nexport const MainContentWrapper = styled.div`\r\n    margin-top: ${props => props.theme.navHeight};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    box-sizing: content-box;\r\n    height: 3vh;\r\n    font-size: 1em;\r\n    margin: 0 1rem;\r\n    padding: 0 1em;\r\n    border-radius: 3px;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    /* Color the border and text with theme.main */\r\n    background-color: ${props => props.theme.backgroundColor};\r\n    color: ${props => props.theme.mainAccent};\r\n    border: 2px solid ${props => props.theme.mainAccent};\r\n\r\n    transition: border-color 0.2s ease;\r\n    transition: background-color 0.2s ease;\r\n    :hover {\r\n        color: ${props => props.theme.fontColor};\r\n        border: 2px solid ${props => props.theme.fontColor};\r\n    }\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n    color: blue;\r\n`;\r\n\r\nexport const GridHeader = styled.h3`\r\n    grid-column: label-start / input-end;\r\n    text-align: center;\r\n    margin: 0;\r\n    margin-bottom: 0.5rem;\r\n    padding: 0.25rem 0;\r\n    border-bottom: solid 2px ${props => props.theme.mainAccent};\r\n`;\r\n\r\nexport const GridLabel = styled.label`\r\n    font-weight: bolder;\r\n    grid-column: label-start / label-end;\r\n    grid-row: span 1;\r\n`;","import React from 'react';\r\nimport { MainContentWrapper } from '../features/PrimaryStyles.js';\r\n\r\nconst Homepage = () => (\r\n    <MainContentWrapper>\r\n        <h1 style={{margin:\"10vh 0\", textAlign: \"center\"}}>Nothing here for now</h1>\r\n    </MainContentWrapper>\r\n);\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styled from 'styled-components';\r\nimport { MainContentWrapper } from '../features/PrimaryStyles.js';\r\nimport { editCSS } from '../store/themeSlice'; \r\n\r\nexport const StyledInput = styled.input`\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    color: ${(props) => props.theme.fontColor};\r\n\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid ${props => props.theme.fontColor};\r\n\r\n    &[type='color']{\r\n        padding: 0;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst Themepage = ({onEditCSS}) => {\r\n\r\n    const HandleInputChange = e => {\r\n        const {name, value} = e.target;\r\n\r\n        onEditCSS({\r\n            name,\r\n            value: value\r\n        })\r\n    }\r\n\r\n    return (\r\n    <MainContentWrapper>\r\n        <p>Font color:</p>\r\n        <StyledInput \r\n                name='backgroundColor'\r\n                type='color'\r\n                id='singleIntervalInput' \r\n                defaultValue='0'\r\n                step='0.25' \r\n                min='0.25' \r\n                max='3'\r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n    </MainContentWrapper>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onEditCSS: (obj) => dispatch(editCSS(obj)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Themepage);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { selectItems, selectProperties } from '../../../store/scheduleSlice.js';\r\n\r\nconst ScheduleWrapper = styled.div`\r\n    background-color: ${props => props.theme.backgroundColor};\r\n    display: grid;\r\n    grid-template-columns: [time-intervals-start] max-content [time-intervals-end items-start] repeat(7, auto) [items-end];\r\n    grid-template-rows: \r\n        [header-start] max-content \r\n        [header-end items-start] \r\n        /* repeat(${props => props.rows}, auto) [items-end]; */\r\n        repeat(${props => props.rows}, ${props => props.scale*props.rowLength}vh) [items-end];\r\n\r\n    /* grid-gap: 3px; */\r\n    text-align: center;\r\n\r\n    grid-area: schedule;\r\n`;\r\n\r\nconst Item = styled.div`\r\n    font-size: 1rem;\r\n    padding: 0.25rem;\r\n    grid-column: ${props => props.col};\r\n    grid-column-start: ${props => props.colStart};\r\n    grid-column-end: ${props => props.colEnd};\r\n\r\n    grid-row: ${props => props.row};\r\n    grid-row-start: ${props => props.rowStart};\r\n    grid-row-end: ${props => props.rowEnd};\r\n    position: relative;\r\n`;\r\nconst DayItem = styled(Item)`\r\n    font-weight: bolder;\r\n    font-size: larger;\r\n`;\r\nconst AddedItem = styled(Item)`\r\n    z-index: 1;\r\n\r\n    /* background-color: ${props => props.theme.backgroundColor}; */\r\n    background-color: ${props => props.backgroundColor};\r\n\r\n    -webkit-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.5);\r\n    -moz-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.5);\r\n    box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.5);\r\n    border: solid 1px ${props => props.theme.backgroundColor};\r\n\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst ItemText = styled.p`\r\n    margin: 0;\r\n    padding: 0;\r\n    ${props => {\r\n        if (props.theme.name === 'DARK_MODE')\r\n            return 'text-shadow: 1px 1px 2px '+props.theme.textShadowColor+';';\r\n    }}\r\n`;\r\n\r\nconst SeperatorItem = styled(Item)`\r\n    z-index: 0;\r\n\r\n    border-top: ${props => (props.index === 1)? \"2px solid \"+props.theme.mainAccent:\"none\"};\r\n    border-bottom: 1px inset ${props => props.theme.mainAccent};\r\n`;\r\n\r\nexport const ParseTime = (rawTime) => {\r\n    const hours = Math.floor(rawTime);\r\n    const minutes = (hours !== rawTime)? (rawTime - hours)*60 : 0;\r\n\r\n    const HH = (hours < 10)? `0${hours}`: `${hours}`;\r\n    const MM = (minutes < 10)? `0${minutes}`: `${minutes}`;\r\n    const time = `${HH}:${MM}`;\r\n    return time;\r\n}\r\n\r\nexport const GetColFromDay = (day) => {\r\n    let col;\r\n    switch(day) {\r\n        case 'M':\r\n            col = '2 / 3';\r\n            break;\r\n        case 'T':\r\n            col = '3 / 4';\r\n            break;\r\n        case 'W':\r\n            col = '4 / 5';\r\n            break;\r\n        case 'R':\r\n            col = '5 / 6';\r\n            break;\r\n        case 'F':\r\n            col = '6 / 7';\r\n            break;\r\n        case 'S':\r\n            col = '7 / 8';\r\n            break;\r\n        case 'U':\r\n            col = '8 / 9';\r\n            break;\r\n        default:\r\n            col = '1 / 2';\r\n    }\r\n    return col;\r\n}\r\n\r\nexport const GetDayFromLetter = (letter) => {\r\n    switch(letter) {\r\n        case 'M':\r\n            return 'Monday';\r\n        case 'T':\r\n            return 'Tuesday';\r\n        case 'W':\r\n            return 'Wednesday';\r\n        case 'R':\r\n            return 'Thursday';\r\n        case 'F':\r\n            return 'Friday';\r\n        case 'S':\r\n            return 'Saturday';\r\n        case 'U':\r\n            return 'Sunday';\r\n        default:\r\n            return '-';\r\n    }\r\n}\r\n\r\nconst Schedule = ({scheduleProperties, scheduleItems}) => {\r\n    const {interval: singleInterval, scale, dayStart, dayEnd} = scheduleProperties;\r\n    let dayLength = (dayEnd - dayStart);\r\n    let rowLength = 15/60;\r\n\r\n    const TimeIntervals = () => {\r\n        const timeIntervals = [];\r\n        for(let i = 1; i <= dayLength/singleInterval; i++) {\r\n\r\n            const rawStart = dayStart + (i-1)*singleInterval;\r\n            const rawEnd = dayStart + i*singleInterval;\r\n\r\n            timeIntervals.push({\r\n                index: i,\r\n                start: ParseTime(rawStart),\r\n                end: ParseTime(rawEnd),\r\n                row: `${i + 1} / ${i + 2}`,\r\n                rowStart: `${(i-1)*(singleInterval/rowLength)+1+1}`,\r\n                rowEnd: `${i*(singleInterval/rowLength)+1+1}`\r\n            })\r\n        }\r\n        return timeIntervals;\r\n    }\r\n    const DaysHeader = () => {\r\n        return (\r\n            <> \r\n                <DayItem col='2 / 3' rowStart='header-start' rowEnd='header-end'>Monday</DayItem>\r\n                <DayItem col='3 / 4' rowStart='header-start' rowEnd='header-end'>Tuesday</DayItem>\r\n                <DayItem col='4 / 5' rowStart='header-start' rowEnd='header-end'>Wednesday</DayItem>\r\n                <DayItem col='5 / 6' rowStart='header-start' rowEnd='header-end'>Thursday</DayItem>\r\n                <DayItem col='6 / 7' rowStart='header-start' rowEnd='header-end'>Friday</DayItem>\r\n                <DayItem col='7 / 8' rowStart='header-start' rowEnd='header-end'>Saturday</DayItem>\r\n                <DayItem col='8 / 9' rowStart='header-start' rowEnd='header-end'>Sunday</DayItem>\r\n            </>\r\n        );\r\n    }\r\n    const CreateItem = item => {\r\n        const {name, id, content, color} = item;\r\n        return (\r\n            <React.Fragment key={name+id}>\r\n                {content.map(contentItem => {\r\n                    let col = GetColFromDay(contentItem.day);\r\n                    let rowLineStart = (contentItem.timeStart - dayStart)/rowLength + 1 + 1;\r\n                    let rowLineEnd = (contentItem.timeEnd - dayStart)/rowLength + 1 + 1;\r\n                    let row = `${rowLineStart} / ${rowLineEnd}`;\r\n                    \r\n                    return (\r\n                        <AddedItem\r\n                            title={`${ParseTime(contentItem.timeStart)} - ${ParseTime(contentItem.timeEnd)}`}\r\n                            col={col}\r\n                            rowStart={rowLineStart}\r\n                            rowEnd={rowLineEnd}\r\n                            backgroundColor={color}\r\n                            key={`${id} - ${row} - ${col}`}>\r\n                                <ItemText>{name}</ItemText>\r\n                                <ItemText>{contentItem.type}</ItemText>\r\n                        </AddedItem>\r\n                    );\r\n                })}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <ScheduleWrapper rows={dayLength/rowLength} rowLength={rowLength} scale={scale}>\r\n                {scheduleItems.map((item) => CreateItem(item))}\r\n\r\n                {DaysHeader()}\r\n                {TimeIntervals()\r\n                    .map(item => \r\n                    <SeperatorItem \r\n                        index={item.index}\r\n                        colStart='time-intervals-start'\r\n                        colEnd='time-intervals-end'\r\n                        rowStart={item.rowStart}\r\n                        rowEnd={item.rowEnd}\r\n                        key={item.row}>\r\n                        {`${item.start} - ${item.end}`}\r\n                    </SeperatorItem>)}\r\n\r\n                {TimeIntervals()\r\n                    .map(item => \r\n                    <SeperatorItem \r\n                        index={item.index}\r\n                        colStart='items-start'\r\n                        colEnd='items-end'\r\n                        rowStart={item.rowStart}\r\n                        rowEnd={item.rowEnd}\r\n                        key={item.row + 'sep'}>\r\n                    </SeperatorItem>)}\r\n        </ScheduleWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    scheduleProperties: selectProperties(state),\r\n    scheduleItems: selectItems(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../../PrimaryStyles.js'\r\n\r\nconst Container = styled.div`\r\n    margin: 2px 0;\r\n    grid-column: span 2;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-content: center;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst DayButton = styled(Button)`\r\n    flex: 1;\r\n    max-width: 2vw;\r\n    box-sizing: content-box;\r\n    height: 1.5rem;\r\n    padding: 0px;\r\n    margin: 1px;\r\n\r\n\r\n    ${props => {\r\n\r\n        if (props.isSelected(props.value))\r\n            return (\r\n                'background-color: ' + props.theme.mainAccent + ';'+\r\n                'border-color: ' + props.theme.fontColor + ';'+\r\n                'color: ' + props.theme.fontColor+';'\r\n                );\r\n        else if (props.active)\r\n            return (\r\n                'background-color: ' + props.theme.mainAccent + ';'+\r\n                'border-color: ' + props.theme.mainAccent + ';'+\r\n                'color: ' + props.theme.backgroundColor + ';'\r\n                );\r\n        else\r\n            return (\r\n                'background-color: ' + props.theme.backgroundColor + ';'+\r\n                'color: ' + props.theme.mainAccent + ';'\r\n            );\r\n    }}\r\n`;\r\n\r\nconst DaySelector = ({active, setActive, selectedDay, setSelectedDay}) => {\r\n    const ToggleActive = e => {\r\n        setSelectedDay(e.target.value);\r\n        setActive({\r\n            ...active,\r\n            [e.target.value]: true\r\n            // [e.target.value]: !active[e.target.value]\r\n        })\r\n    }\r\n\r\n    const isSelected = value => (selectedDay === value);\r\n\r\n    return (\r\n        <Container>\r\n            <DayButton value='M' active={active.M} onClick={ToggleActive} isSelected={isSelected}>M</DayButton>\r\n            <DayButton value='T' active={active.T} onClick={ToggleActive} isSelected={isSelected}>T</DayButton>\r\n            <DayButton value='W' active={active.W} onClick={ToggleActive} isSelected={isSelected}>W</DayButton>\r\n            <DayButton value='R' active={active.R} onClick={ToggleActive} isSelected={isSelected}>R</DayButton>\r\n            <DayButton value='F' active={active.F} onClick={ToggleActive} isSelected={isSelected}>F</DayButton>\r\n            <DayButton value='S' active={active.S} onClick={ToggleActive} isSelected={isSelected}>S</DayButton>\r\n            <DayButton value='U' active={active.U} onClick={ToggleActive} isSelected={isSelected}>U</DayButton>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DaySelector;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { addScheduleItem } from '../../../store/scheduleSlice.js';\r\nimport { Button, GridHeader as Header, GridLabel as Label } from '../../PrimaryStyles.js'\r\nimport { GetDayFromLetter } from './Schedule.js';\r\nimport DaySelector from './DaySelector.js';\r\n\r\nconst StyledInput = styled.input`\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    color: ${(props) => props.theme.fontColor};\r\n    grid-column: input-start / input-end;\r\n\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid ${props => props.theme.fontColor};\r\n\r\n    &[type='color']{\r\n        padding: 0;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst StyledSelect = styled.select`\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    color: ${(props) => props.theme.fontColor};\r\n    grid-column: input-start / input-end;\r\n\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid ${props => props.theme.fontColor};\r\n`;\r\n\r\nconst AddButton = styled(Button)`\r\n    margin-top: 2%;\r\n    grid-column: label-start / input-end;\r\n`;\r\n\r\nconst ContentProperties = ({itemContents, setItemContents, index, day}) => {\r\n    const HandleInputChange = e => {\r\n        const {name: inputName, value: inputValue} = e.target;\r\n        setItemContents(() => {\r\n            const notMyItem = itemContents.filter(item => item !== myItem);\r\n            return(\r\n                [\r\n                    ...notMyItem,\r\n                    {\r\n                        day: day,\r\n                        index: index,\r\n                        ...myItem,\r\n                        [inputName]: inputValue\r\n                    }\r\n                ]\r\n            );\r\n        })\r\n    };\r\n    const myItem = itemContents.find(item => item.day === day && item.index === index) ||\r\n        {\r\n            day: day,\r\n            index: index,\r\n            type: 'Select',\r\n            timeStart: '',\r\n            timeEnd: ''\r\n        };\r\n    return (\r\n        <>\r\n            <Label htmlFor='typeSelect'>Type: </Label>\r\n            <StyledSelect \r\n                name='type' \r\n                id='typeSelect' \r\n                onChange={HandleInputChange} \r\n                value={myItem.type || 'Select'}>\r\n                    <option value='Select' disabled>Select</option>\r\n                    <option value='Lecture'>Lecture</option>\r\n                    <option value='Lab'>Lab</option>\r\n                    <option value='Tutorial'>Tutorial</option>\r\n                    <option value='Blended'>Blended</option>\r\n            </StyledSelect>\r\n\r\n            <Label htmlFor='newDayStartInput'>Starts at:</Label>\r\n            <StyledInput \r\n                name='timeStart' \r\n                id='newDayStartInput'\r\n                type='time'\r\n                step='900'\r\n                value={myItem.timeStart || ''}\r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n\r\n            <Label htmlFor='newDayEndInput'>Ends at:</Label>\r\n            <StyledInput \r\n                name='timeEnd' \r\n                id='newDayEndInput'\r\n                type='time'\r\n                step='900'\r\n                value={myItem.timeEnd || ''}\r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ScheduleAddItem = ({onAddScheduleItem}) => {\r\n    const [selectedDay, setSelectedDay] = useState('');\r\n    const [daysToAdd, setDaysToAdd] = useState({\r\n        M: false,\r\n        T: false,\r\n        W: false,\r\n        R: false,\r\n        F: false,\r\n        S: false,\r\n        U: false,\r\n    });\r\n   \r\n    const [itemProperties, setItemProperties] = useState({\r\n        name: '',\r\n        color: '#000000',\r\n        count: {\r\n            M: 0,\r\n            T: 0,\r\n            W: 0,\r\n            R: 0,\r\n            F: 0,\r\n            S: 0,\r\n            U: 0\r\n        }\r\n    });\r\n    const [itemContents, setItemContents] = useState([]);\r\n\r\n    const HandleSubItemPropertiesChange = e => {\r\n        const {name: inputName, value: inputValue} = e.target;\r\n        if (inputName==='count')\r\n            setItemProperties({\r\n                ...itemProperties,\r\n                count: {\r\n                    ...itemProperties.count,\r\n                    [selectedDay]: parseFloat(inputValue)\r\n                }\r\n            })\r\n        else\r\n            setItemProperties({\r\n                ...itemProperties,\r\n                [inputName]: inputValue\r\n            })\r\n    }\r\n\r\n    const onClickAddScheduleItem = () => {\r\n        // const dayStartTime = stagedItem.newDayStart.split(':');\r\n        // if (!isValidTime(dayStartTime[0], dayStartTime[1])) return; //add invalid input message\r\n\r\n        // const dayEndTime = stagedItem.newDayEnd.split(':');\r\n        // if (!isValidTime(dayEndTime[0], dayEndTime[1])) return; //add invalid input message\r\n\r\n        const parsedItemContents = itemContents.map(item => {\r\n            let dayStartTime = item.timeStart.split(':');    \r\n            let dayEndTime = item.timeEnd.split(':');\r\n    \r\n            return ({\r\n                day: item.day,\r\n                type: item.type,\r\n                timeStart: `${parseInt(dayStartTime[0]) + dayStartTime[1]/60}`,\r\n                timeEnd: `${parseInt(dayEndTime[0]) + dayEndTime[1]/60}`\r\n            });\r\n        });\r\n\r\n        onAddScheduleItem({\r\n            id: uuidv4(),\r\n            name: itemProperties.name,\r\n            color: itemProperties.color,\r\n            content: parsedItemContents\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header>New Item</Header>\r\n            <Label htmlFor='nameInput'>Name: </Label>\r\n            <StyledInput\r\n                type='text'\r\n                name='name'\r\n                id='nameInput'\r\n                value={itemProperties.name || ''}\r\n                onChange={HandleSubItemPropertiesChange}>\r\n            </StyledInput>\r\n\r\n            <Label htmlFor='newColorInput'>Color: </Label>\r\n            <StyledInput\r\n                type='color'\r\n                name='color'\r\n                id='newColorInput'\r\n                value={itemProperties.color || '#000000'}\r\n                onChange={HandleSubItemPropertiesChange}>\r\n            </StyledInput>\r\n\r\n            <DaySelector \r\n                active={daysToAdd} \r\n                setActive={setDaysToAdd} \r\n                selectedDay={selectedDay} \r\n                setSelectedDay={setSelectedDay}/>\r\n\r\n            <Label htmlFor='SelectedDayView'>Selected Day: </Label>\r\n            <StyledInput\r\n                id='SelectedDayView'\r\n                type='text'\r\n                value={GetDayFromLetter(selectedDay) || ''}\r\n                disabled/>\r\n\r\n            <Label htmlFor='countInput'>Content Count:</Label>\r\n            <StyledInput\r\n                name='count'\r\n                id='countInput'\r\n                type='number'\r\n                min='0'\r\n                value={itemProperties.count[selectedDay] || 0}\r\n                onChange={HandleSubItemPropertiesChange}/>\r\n\r\n            {/* {(selectedItem.count)? Array(selectedItem.count).fill(<ContentProperties key={'te'}/>):null} */}\r\n            {(itemProperties.count[selectedDay])? \r\n                [...Array(itemProperties.count[selectedDay]).keys()].map(key => \r\n                    <ContentProperties \r\n                    key={key+'TypeTimeInput'} \r\n                    day={selectedDay}\r\n                    index={key}\r\n                    itemContents={itemContents}\r\n                    setItemContents={setItemContents}/>)\r\n                :null\r\n            }\r\n            {/* {(selectedItem.count)? Array.from({length: selectedItem.count}, (v, i) => <ContentProperties key={i+'TypeTimeInput'}/>):null} */}\r\n            \r\n            <AddButton onClick={onClickAddScheduleItem}>Add to Schedule</AddButton>\r\n        </>\r\n    );\r\n}\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddScheduleItem: item => dispatch(addScheduleItem(item)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleAddItem);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setScheduleProperties, addScheduleItem, selectProperties } from '../../../store/scheduleSlice.js';\r\n\r\nimport { GridHeader as Header, GridLabel as Label } from '../../PrimaryStyles.js'\r\nimport { StyledInput } from './ScheduleOperations.js';\r\n\r\nconst ScheduleProperties =  ({userInput, onSetScheduleProperties, onAddScheduleItem}) => {\r\n    const HandleInputChange = e => {\r\n        const {name, value} = e.target;\r\n        if (name==='interval' && value <= 0) {\r\n            return;\r\n        }\r\n        onSetScheduleProperties({\r\n            name,\r\n            value: parseFloat(value)\r\n        })\r\n        // singleInterval = value;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Header>Properties</Header>\r\n            <Label htmlFor='singleIntervalInput'>Time Interval</Label>\r\n            <StyledInput \r\n                name='interval'\r\n                type='number'\r\n                id='singleIntervalInput' \r\n                defaultValue={userInput.interval} \r\n                step='0.25' \r\n                min='0.25' \r\n                max='3' \r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n\r\n            <Label htmlFor='scaleInput'>Scale</Label>\r\n            <StyledInput \r\n                name='scale' \r\n                type='number'\r\n                id='scaleInput'\r\n                defaultValue={userInput.scale} \r\n                step='0.1' \r\n                min='1' \r\n                max='10' \r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n\r\n            <Label htmlFor='dayStartInput'>Start day at: </Label>\r\n            <StyledInput \r\n                name='dayStart' \r\n                type='number'\r\n                id='dayStartInput'\r\n                defaultValue={userInput.dayStart}\r\n                step='0.5' \r\n                min='0' \r\n                max='24' \r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n\r\n            <Label htmlFor='dayEndInput'>End day at: </Label>\r\n            <StyledInput \r\n                name='dayEnd' \r\n                type='number'\r\n                id='dayEndInput'\r\n                defaultValue={userInput.dayEnd} \r\n                step='0.5' \r\n                min='0' \r\n                max='24' \r\n                onChange={HandleInputChange}>\r\n            </StyledInput>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userInput: selectProperties(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSetScheduleProperties: (obj) => dispatch(setScheduleProperties(obj)),\r\n    onAddScheduleItem: (item) => dispatch(addScheduleItem(item))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleProperties);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ScheduleAddItem from './ScheduleAddItem.js';\r\nimport ScheduleProperties from './ScheduleProperties.js';\r\n\r\nexport const StyledInput = styled.input`\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    color: ${(props) => props.theme.fontColor};\r\n    grid-column: input-start / input-end;\r\n\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid ${props => props.theme.fontColor};\r\n\r\n    &[type='color']{\r\n        padding: 0;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst ScheduleOperationsWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: [label-start] auto [label-end input-start] 12ch [input-end];\r\n    align-items: center;\r\n`;\r\n\r\nconst ScheduleOperations = () => {\r\n    return(\r\n        <>\r\n        <ScheduleOperationsWrapper>\r\n                <ScheduleProperties />\r\n        </ScheduleOperationsWrapper>\r\n        <ScheduleOperationsWrapper>\r\n                <ScheduleAddItem />\r\n        </ScheduleOperationsWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ScheduleOperations;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeScheduleItem, selectItems } from '../../../store/scheduleSlice.js';\r\nimport styled from 'styled-components';\r\nimport { ParseTime } from './Schedule.js';\r\nimport { GridHeader as Header, Button } from '../../PrimaryStyles.js'\r\n\r\nconst ItemHeader = styled.div`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: 0.5rem 0;\r\n    > p {\r\n        margin: 0 auto 0 10px;\r\n        font-weight: bolder;\r\n    }\r\n`;\r\n\r\nconst RemoveButton = styled(Button)`\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 2rem;\r\n    width: 2rem;\r\n`;\r\n\r\nconst ItemInfoWrapper = styled.div`\r\n    background-color: ${props => props.color};\r\n    display: grid;\r\n    grid-template-columns: repeat(3, auto);\r\n\r\n    > p {\r\n        margin: 0;\r\n        padding: 0;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\n\r\nconst ScheduleItemContainer = styled.div`\r\n    margin: 0.5rem 0;\r\n`;\r\nconst Circle = styled.div`\r\n    height: 1.4rem;\r\n    width: 1.4rem;\r\n    border-radius: 50%;\r\n    background-color: ${props => props.color};\r\n`;\r\n\r\nconst ItemInfo = ({ content }) => (\r\n    <ItemInfoWrapper>\r\n        {content.map(subItem => (\r\n            <React.Fragment key={'subItem'+subItem.day+subItem.type+subItem.timeStart+subItem.timeEnd}>\r\n                <p>{subItem.day}</p>\r\n                <p>{subItem.type}</p>\r\n                <p>{ParseTime(subItem.timeStart)} - {ParseTime(subItem.timeEnd)}</p>\r\n            </React.Fragment>\r\n        ))}\r\n    </ItemInfoWrapper>\r\n)\r\nconst ScheduleItem = ({id, name, color, content, onRemoveScheduleItem}) => (\r\n    <ScheduleItemContainer>\r\n        <ItemHeader>\r\n            <Circle color={color}/>\r\n            <p>{name}</p>\r\n            <RemoveButton onClick={() => onRemoveScheduleItem(id)}>X</RemoveButton>\r\n        </ItemHeader>\r\n        <ItemInfo content={content}/>\r\n    </ScheduleItemContainer>\r\n);\r\nconst ScheduleItems = ({scheduleItems, onRemoveScheduleItem}) => {\r\n    return(\r\n        <div>\r\n            <Header>Content</Header>\r\n            {scheduleItems.map(\r\n                (item) => \r\n                <ScheduleItem \r\n                    id={item.id}\r\n                    name={item.name}\r\n                    color={item.color} \r\n                    content={item.content}\r\n                    key={'Items - '+item.id}\r\n                    onRemoveScheduleItem={onRemoveScheduleItem}/>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    scheduleItems: selectItems(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onRemoveScheduleItem: (id) => dispatch(removeScheduleItem(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleItems);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { MainContentWrapper } from '../features/PrimaryStyles.js';\r\nimport Schedule from '../features/components/Schedule/Schedule.js';\r\nimport ScheduleOperations from '../features/components/Schedule/ScheduleOperations.js';\r\nimport ScheduleItems from '../features/components/Schedule/ScheduleItems.js';\r\n\r\nconst ContentWrapper = styled(MainContentWrapper)`\r\n    > h1 {\r\n        padding: 10px;\r\n        margin: 0;\r\n        padding: 1vh 0;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst SomeWrapper = styled.div`\r\n    display: grid;\r\n    /* grid-template-columns: max-content max-content auto; */\r\n    grid-template-columns: 20% 1fr;\r\n    grid-template-areas: \"items schedule\" \"itemsAdd schedule\" \"operations schedule\";\r\n    grid-auto-rows: min-content;\r\n    align-items: flex-start;\r\n\r\n    > * {\r\n        margin: 10px;\r\n        padding: 10px;\r\n\r\n        -webkit-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n        -moz-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n        box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n    }\r\n`;\r\n\r\nconst Schedulepage = () => (\r\n    <ContentWrapper>\r\n        <h1>Schedule Builder</h1>\r\n        <SomeWrapper>\r\n            <ScheduleItems />\r\n            <ScheduleOperations />\r\n            {/* <ScheduleItems /> */}\r\n            {/* <ScheduleAddItem /> */}\r\n            <Schedule />\r\n        </SomeWrapper>\r\n    </ContentWrapper>\r\n);\r\n\r\nexport default Schedulepage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '../PrimaryStyles.js';\r\nimport { toggleTheme } from '../../store/themeSlice.js';\r\n\r\nconst ThemeButton = ( {onToggleThemePressed, children} ) => {\r\n    return (\r\n        <Button onClick = {onToggleThemePressed}>{children}</Button>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onToggleThemePressed: () => dispatch(toggleTheme()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeButton);","import React, {useState} from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { selectThemeFontColor, selectThemeMainAccent } from '../../store/themeSlice.js';\r\nimport { Button } from '../PrimaryStyles.js';\r\nimport ThemeButton from './ThemeButton.js'\r\n\r\nconst Nav = styled.nav`\r\n    z-index: 10;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n\r\n    position: fixed;\r\n    height: ${props => props.theme.navHeight};\r\n    top: 0;\r\n    width: 100%;\r\n    border-top: 3px solid ${props => props.theme.mainAccent};\r\n    background-color: ${props => props.theme.backgroundColor};\r\n\r\n    -webkit-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n    box-shadow: 0 0.005em 0.5em rgba(0,0,0,0.75);\r\n\r\n    > :first-child {\r\n        margin-left: 1rem;\r\n    }\r\n\r\n    > :last-child {\r\n        margin-left: auto;\r\n    }\r\n\r\n    > a {\r\n        margin: 0 0.5rem;\r\n        height: 60%;\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        justify-content: center;\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    height: 100%;\r\n    min-width: fit-content;\r\n    box-sizing: border-box;\r\n    margin: 0 0;\r\n    ${props => {\r\n        if (props.value === props.selectedPage) {\r\n            return (\r\n                'border-color: ' + selectThemeFontColor(props) + ';'+\r\n                'color: ' + selectThemeFontColor(props) + ';'+\r\n                'background-color:' + selectThemeMainAccent(props) + ';'\r\n                );\r\n        }\r\n    }}\r\n`;\r\n\r\nconst Navbar = () => {\r\n    const [selectedPage, setSelectedPage] = useState(useLocation().pathname);\r\n    const setActive = e => {\r\n        setSelectedPage(e.target.value);\r\n    }\r\n    return (\r\n    <Nav>\r\n        <Link to='/'>\r\n            <StyledButton onClick={setActive} value='/' selectedPage={selectedPage}>Resume</StyledButton>\r\n        </Link>\r\n        <Link to='/theme'>\r\n            <StyledButton onClick={setActive} value='/theme' selectedPage={selectedPage}>Modify Theme</StyledButton>\r\n        </Link>\r\n        <Link to='/schedule_builder'>\r\n            <StyledButton onClick={setActive} value='/schedule_builder' selectedPage={selectedPage}>Schedule Builder</StyledButton>\r\n        </Link>\r\n        <ThemeButton>Toggle</ThemeButton>\r\n    </Nav>\r\n);}\r\n\r\nexport default Navbar;","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BrowserRouter,\n  Routes,\n  Route \n} from 'react-router-dom';\n\nimport Homepage from './pages/Homepage';\nimport Themepage from './pages/Themepage';\nimport Schedulepage from './pages/Schedulepage';\n\nimport Navbar from './features/components/Navbar'\n\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyle } from './features/PrimaryStyles.js'\n\nconst App = ({theme}) => (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <GlobalStyle />\n        <Navbar />\n        <Routes>\n            <Route path = '/' exact element={< Homepage />} />\n            <Route path = '/theme' exact element={< Themepage />} />\n            <Route path = '/schedule_builder' exact element={< Schedulepage />} />\n        </Routes>\n      </BrowserRouter>\n    </ThemeProvider>\n);\n\nconst mapStateToProps = state => ({\n  theme: state.theme,\n});\nconst dispatchStateToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, dispatchStateToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store/store.js';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}